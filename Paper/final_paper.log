This is pdfTeX, Version 3.1415926-2.4-1.40.13 (MiKTeX 2.9) (preloaded format=pdflatex 2013.6.4)  4 NOV 2015 12:40
entering extended mode
**C:/Users/Owner/Documents/GitHub/MATH491Project3/Paper/final_paper.tex
(C:/Users/Owner/Documents/GitHub/MATH491Project3/Paper/final_paper.tex
LaTeX2e <2011/06/27>
Babel <v3.8m> and hyphenation patterns for english, afrikaans, ancientgreek, ar
abic, armenian, assamese, basque, bengali, bokmal, bulgarian, catalan, coptic, 
croatian, czech, danish, dutch, esperanto, estonian, farsi, finnish, french, ga
lician, german, german-x-2012-05-30, greek, gujarati, hindi, hungarian, iceland
ic, indonesian, interlingua, irish, italian, kannada, kurmanji, latin, latvian,
 lithuanian, malayalam, marathi, mongolian, mongolianlmc, monogreek, ngerman, n
german-x-2012-05-30, nynorsk, oriya, panjabi, pinyin, polish, portuguese, roman
ian, russian, sanskrit, serbian, slovak, slovenian, spanish, swedish, swissgerm
an, tamil, telugu, turkish, turkmen, ukenglish, ukrainian, uppersorbian, usengl
ishmax, welsh, loaded.
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\base\article.cls"
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\base\size11.clo"
File: size11.clo 2007/10/19 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
(C:\Users\Owner\AppData\Roaming\MiKTeX\2.9\tex\latex\lineno\lineno.sty
Package: lineno 2005/11/02 line numbers on paragraphs v4.41
\linenopenalty=\count87
\output=\toks14
\linenoprevgraf=\count88
\linenumbersep=\dimen103
\linenumberwidth=\dimen104
\c@linenumber=\count89
\c@pagewiselinenumber=\count90
\c@LN@truepage=\count91
\c@internallinenumber=\count92
\c@internallinenumbers=\count93
\quotelinenumbersep=\dimen105
\bframerule=\dimen106
\bframesep=\dimen107
\bframebox=\box26
LaTeX Info: Redefining \\ on input line 3056.
)
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\graphics\graphicx.sty"
Package: graphicx 1999/02/16 v1.0f Enhanced LaTeX Graphics (DPC,SPQR)

("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\graphics\keyval.sty"
Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
\KV@toks@=\toks15
)
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\graphics\graphics.sty"
Package: graphics 2009/02/05 v1.0o Standard LaTeX Graphics (DPC,SPQR)

("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\graphics\trig.sty"
Package: trig 1999/03/16 v1.09 sin cos tan (DPC)
)
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\00miktex\graphics.cfg"
File: graphics.cfg 2007/01/18 v1.5 graphics configuration of teTeX/TeXLive
)
Package graphics Info: Driver file: pdftex.def on input line 91.

("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\pdftex-def\pdftex.def"
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX

("C:\Program Files (x86)\MiKTeX 2.9\tex\generic\oberdiek\infwarerr.sty"
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
)
("C:\Program Files (x86)\MiKTeX 2.9\tex\generic\oberdiek\ltxcmds.sty"
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
)
\Gread@gobject=\count94
))
\Gin@req@height=\dimen108
\Gin@req@width=\dimen109
)
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\tools\bm.sty"
Package: bm 2004/02/26 v1.1c Bold Symbol Support (DPC/FMi)
\symboldoperators=\mathgroup4
\symboldletters=\mathgroup5
\symboldsymbols=\mathgroup6
LaTeX Font Info:    Redeclaring math alphabet \mathbf on input line 138.
LaTeX Info: Redefining \bm on input line 204.
)
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\amsmath\amsmath.sty"
Package: amsmath 2013/01/14 v2.14 AMS math features
\@mathmargin=\skip43

For additional information on amsmath, use the `?' option.
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\amsmath\amstext.sty"
Package: amstext 2000/06/29 v2.01

("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\amsmath\amsgen.sty"
File: amsgen.sty 1999/11/30 v2.0
\@emptytoks=\toks16
\ex@=\dimen110
))
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\amsmath\amsbsy.sty"
Package: amsbsy 1999/11/29 v1.2d
LaTeX Info: Redefining \boldsymbol on input line 39.
\pmbraise@=\dimen111
)
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\amsmath\amsopn.sty"
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count95
LaTeX Info: Redefining \frac on input line 210.
\uproot@=\count96
\leftroot@=\count97
LaTeX Info: Redefining \overline on input line 306.
\classnum@=\count98
\DOTSCASE@=\count99
LaTeX Info: Redefining \ldots on input line 378.
LaTeX Info: Redefining \dots on input line 381.
LaTeX Info: Redefining \cdots on input line 466.
\Mathstrutbox@=\box27
\strutbox@=\box28
\big@size=\dimen112
LaTeX Font Info:    Redeclaring font encoding OML on input line 566.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 567.
\macc@depth=\count100
\c@MaxMatrixCols=\count101
\dotsspace@=\muskip10
\c@parentequation=\count102
\dspbrk@lvl=\count103
\tag@help=\toks17
\row@=\count104
\column@=\count105
\maxfields@=\count106
\andhelp@=\toks18
\eqnshift@=\dimen113
\alignsep@=\dimen114
\tagshift@=\dimen115
\tagwidth@=\dimen116
\totwidth@=\dimen117
\lineht@=\dimen118
\@envbody=\toks19
\multlinegap=\skip44
\multlinetaggap=\skip45
\mathdisplay@stack=\toks20
LaTeX Info: Redefining \[ on input line 2665.
LaTeX Info: Redefining \] on input line 2666.
)
(C:\Users\Owner\AppData\Roaming\MiKTeX\2.9\tex\latex\amscls\amsthm.sty
Package: amsthm 2015/03/04 v2.20.2
\thm@style=\toks21
\thm@bodyfont=\toks22
\thm@headfont=\toks23
\thm@notefont=\toks24
\thm@headpunct=\toks25
\thm@preskip=\skip46
\thm@postskip=\skip47
\thm@headsep=\skip48
\dth@everypar=\toks26
)
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\tools\tabularx.sty"
Package: tabularx 1999/01/07 v2.07 `tabularx' package (DPC)

("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\tools\array.sty"
Package: array 2008/09/09 v2.4c Tabular extension package (FMi)
\col@sep=\dimen119
\extrarowheight=\dimen120
\NC@list=\toks27
\extratabsurround=\skip49
\backup@length=\skip50
)
\TX@col@width=\dimen121
\TX@old@table=\dimen122
\TX@old@col=\dimen123
\TX@target=\dimen124
\TX@delta=\dimen125
\TX@cols=\count107
\TX@ftn=\toks28
)
\c@theorem=\count108

(C:\Users\Owner\Documents\GitHub\MATH491Project3\Paper\final_paper.aux)
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.

(C:\Users\Owner\AppData\Roaming\MiKTeX\2.9\tex\context\base\supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count109
\scratchdimen=\dimen126
\scratchbox=\box29
\nofMPsegments=\count110
\nofMParguments=\count111
\everyMPshowfont=\toks29
\MPscratchCnt=\count112
\MPscratchDim=\dimen127
\MPnumerator=\count113
\makeMPintoPDFobject=\count114
\everyMPtoPDFconversion=\toks30
)
{vertical mode: \tracingstats}
{\tracingpages}
{\tracinglostchars}
{\tracingmacros}
{\tracingparagraphs}
{\tracingrestores}
{\errorcontextlines}

\loggingoutput ->\tracingoutput \@ne \showboxbreadth \maxdimen \showboxdepth \m
axdimen \errorstopmode 
{\tracingoutput}
{\showboxbreadth}
{\showboxdepth}
{\errorstopmode}


\showoverfull ->\tracingonline \@ne 
{\tracingonline}
{\par}
{\par}
{\par}
{\par}
{\par}

\DeclareGraphicsExtensions #1->\edef \Gin@extensions {\zap@space #1 \@empty }
#1<-.png,.jpg
{\edef}

\zap@space #1 #2->#1\ifx #2\@empty \else \expandafter \zap@space \fi #2
#1<-.png,.jpg
#2<-\@empty 
{\ifx}
{true}
{\else}

\@empty ->
{blank space  }
{\par}
{\par}
{\par}

\begin #1->\@ifundefined {#1}{\def \reserved@a {\@latex@error {Environment #1 u
ndefined}\@eha }}{\def \reserved@a {\def \@currenvir {#1}\edef \@currenvline {\
on@line }\csname #1\endcsname }}\@ignorefalse \begingroup \@endpefalse \reserve
d@a 
#1<-titlepage

\@ifundefined #1->\expandafter \ifx \csname #1\endcsname \relax \expandafter \@
firstoftwo \else \expandafter \@secondoftwo \fi 
#1<-titlepage
{\expandafter}
{\csname}
{\ifx}
{false}
{\expandafter}
{\fi}

\@secondoftwo #1#2->#2
#1<-\def \reserved@a {\@latex@error {Environment titlepage undefined}\@eha }
#2<-\def \reserved@a {\def \@currenvir {titlepage}\edef \@currenvline {\on@line
 }\csname titlepage\endcsname }
{\def}

\@ignorefalse ->\global \let \if@ignore \iffalse 
{\global}
{\begingroup}

\@endpefalse ->\let \if@endpe \iffalse 
{\let}

\reserved@a ->\def \@currenvir {titlepage}\edef \@currenvline {\on@line }\csnam
e titlepage\endcsname 
{\def}
{\edef}

\on@line -> on input line \the \inputlineno 
{\csname}

\titlepage ->\if@twocolumn \@restonecoltrue \onecolumn \else \@restonecolfalse 
\newpage \fi \thispagestyle {empty}\setcounter {page}\@ne 
{\iffalse}
{false}

\@restonecolfalse ->\let \if@restonecol \iffalse 
{\let}

\newpage ->\if@noskipsec \ifx \@nodocument \relax \leavevmode \global \@noskips
ecfalse \fi \fi \if@inlabel \leavevmode \global \@inlabelfalse \fi \if@nobreak 
\@nobreakfalse \everypar {}\fi \par \vfil \penalty -\@M 
{\iffalse}
{false}
{\iffalse}
{false}
{\iffalse}
{false}
{\par}
{\vfil}
{\penalty}
{\fi}

\thispagestyle #1->\@ifundefined {ps@#1}\undefinedpagestyle {\global \@specialp
agetrue \gdef \@specialstyle {#1}}
#1<-empty

\@ifundefined #1->\expandafter \ifx \csname #1\endcsname \relax \expandafter \@
firstoftwo \else \expandafter \@secondoftwo \fi 
#1<-ps@empty
{\expandafter}
{\csname}
{\ifx}
{false}
{\expandafter}
{\fi}

\@secondoftwo #1#2->#2
#1<-\undefinedpagestyle 
#2<-\global \@specialpagetrue \gdef \@specialstyle {empty}
{\global}

\@specialpagetrue ->\let \if@specialpage \iftrue 
{\gdef}

\setcounter #1#2->\@ifundefined {c@#1}{\@nocounterr {#1}}{\global \csname c@#1\
endcsname #2\relax }
#1<-page
#2<-\@ne 

\@ifundefined #1->\expandafter \ifx \csname #1\endcsname \relax \expandafter \@
firstoftwo \else \expandafter \@secondoftwo \fi 
#1<-c@page
{\expandafter}
{\csname}
{\ifx}
{false}
{\expandafter}
{\fi}

\@secondoftwo #1#2->#2
#1<-\@nocounterr {page}
#2<-\global \csname c@page\endcsname \@ne \relax 
{\global}
{\csname}
{\relax}
{blank space  }
{\par}

\newcommand ->\@star@or@long \new@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\new@command 

\@ifstar #1#2->\new@ifnextchar *{\def \reserved@a *{#1}\reserved@a }{#2}
#1<-\let \l@ngrel@x \relax \new@command 
#2<-\let \l@ngrel@x \long \new@command 

\new@ifnextchar #1#2#3->\let \reserved@d = #1\def \reserved@a {#2}\def \reserve
d@b {#3}\futurelet \@let@token \new@ifnch 
#1<-*
#2<-\def \reserved@a *{\let \l@ngrel@x \relax \new@command }\reserved@a 
#3<-\let \l@ngrel@x \long \new@command 
{\let}
{\def}
{\def}
{\futurelet}

\new@ifnch ->\ifx \@let@token \reserved@d \let \reserved@b \reserved@a \fi \res
erved@b 
{\ifx}
{false}

\reserved@b ->\let \l@ngrel@x \long \new@command 
{\let}

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\HRule 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \HRule 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \HRule 
#3<-\@newcommand \HRule [{0}]
{\let}
{\def}
{\def}
{\futurelet}

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 
{\ifx}
{false}
{\ifx}
{false}
{\let}
{\fi}
{\fi}

\reserved@c ->\@newcommand \HRule [{0}]

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\HRule 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \HRule [0]
#3<-\@argdef \HRule [0]
{\let}
{\def}
{\def}
{\futurelet}

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 
{\ifx}
{false}
{\ifx}
{false}
{\let}
{\fi}
{\fi}

\reserved@c ->\@argdef \HRule [0]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\HRule 
#2<-0
#3<-\rule {\linewidth }{0.5mm}

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\HRule 
#2<-\@yargdef \HRule \@ne {0}{\rule {\linewidth }{0.5mm}}
{\edef}
{\expandafter}
{\string}

\@gobble #1->
#1<-\

\@ifundefined #1->\expandafter \ifx \csname #1\endcsname \relax \expandafter \@
firstoftwo \else \expandafter \@secondoftwo \fi 
#1<-\reserved@a 
{\expandafter}
{\csname}

\reserved@a ->HRule
{\ifx}
{true}
{\expandafter}
{\else}

\@firstoftwo #1#2->#1
#1<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \HRule \@ne {0}{\rule {\linewidth }{0.5mm}}\fi \fi 
#2<-\@notdefinable 
{\edef}
{\expandafter}

\reserved@a ->HRule

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-H
#2<-R
#3<-u
#4<-lexxx
{\ifx}
{false}
{\ifx}
{false}

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\HRule 
#2<-\@ne 
#3<-0
{\ifx}
{false}
{\let}
{\fi}
{\expandafter}
{\expandafter}
{\number}

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-0
#2<-\HRule 
{\def}
{\long}

\reserved@a #10#2{->\expandafter \def \expandafter \HRule \reserved@b #10{
#1<-
#2<-##1##2##3##4##5##6##7##8##9##0
{\expandafter}
{\expandafter}

\reserved@b #1->
#1<-0
{\fi}
{\fi}
{blank space  }
{\par}

\center ->\trivlist \centering \item \relax 

\trivlist ->\parsep \parskip \@nmbrlistfalse \@trivlist \labelwidth \z@ \leftma
rgin \z@ \itemindent \z@ \let \@itemlabel \@empty \def \makelabel ##1{##1}
{\skip26}

\@nmbrlistfalse ->\let \if@nmbrlist \iffalse 
{\let}

\@trivlist ->\if@noskipsec \leavevmode \fi \@topsepadd \topsep \ifvmode \advanc
e \@topsepadd \partopsep \else \unskip \par \fi \if@inlabel \@noparitemtrue \@n
oparlisttrue \else \if@newlist \@noitemerr \fi \@noparlistfalse \@topsep \@tops
epadd \fi \advance \@topsep \parskip \leftskip \z@skip \rightskip \@rightskip \
parfillskip \@flushglue \par@deathcycles \z@ \@setpar {\if@newlist \advance \pa
r@deathcycles \@ne \ifnum \par@deathcycles >\@m \@noitemerr {\@@par }\fi \else 
{\@@par }\fi }\global \@newlisttrue \@outerparskip \parskip 
{\iffalse}
{false}
{\skip28}
{\ifvmode}
{true}
{\advance}
{\else}
{\iffalse}
{false}
{\iffalse}
{false}

\@noparlistfalse ->\let \if@noparlist \iffalse 
{\let}
{\skip27}
{\fi}
{\advance}
{\leftskip}
{\rightskip}
{\parfillskip}
{\count38}

\@setpar #1->\def \par {#1}\def \@par {#1}
#1<-\if@newlist \advance \par@deathcycles \@ne \ifnum \par@deathcycles >\@m \@n
oitemerr {\@@par }\fi \else {\@@par }\fi 
{\def}
{\def}
{\global}

\@newlisttrue ->\let \if@newlist \iftrue 
{\skip29}
{\dimen25}
{\dimen21}
{\dimen24}
{\let}
{\def}

\centering ->\let \\\@centercr \rightskip \@flushglue \leftskip \@flushglue \pa
rindent \z@ \parfillskip \z@skip 
{\let}
{\rightskip}
{\leftskip}
{\parindent}
{\parfillskip}

\item ->\@inmatherr \item \@ifnextchar [\@item {\@noitemargtrue \@item [\@iteml
abel ]}

\@inmatherr #1->\relax \ifmmode \@latex@error {Command \protect #1 invalid in m
ath mode}\@ehc \fi 
#1<-\item 
{\relax}
{\ifmmode}
{false}

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@item 
#3<-\@noitemargtrue \@item [\@itemlabel ]
{\let}
{\def}
{\def}
{\futurelet}

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 
{\ifx}
{false}
{\ifx}
{false}
{\let}
{\fi}
{\fi}

\reserved@c ->\@noitemargtrue \@item [\@itemlabel ]

\@noitemargtrue ->\let \if@noitemarg \iftrue 
{\let}

\@item [#1]->\if@noparitem \@donoparitem \else \if@inlabel \indent \par \fi \if
hmode \unskip \unskip \par \fi \if@newlist \if@nobreak \@nbitem \else \addpenal
ty \@beginparpenalty \addvspace \@topsep \addvspace {-\parskip }\fi \else \addp
enalty \@itempenalty \addvspace \itemsep \fi \global \@inlabeltrue \fi \everypa
r {\@minipagefalse \global \@newlistfalse \if@inlabel \global \@inlabelfalse {\
setbox \z@ \lastbox \ifvoid \z@ \kern -\itemindent \fi }\box \@labels \penalty 
\z@ \fi \if@nobreak \@nobreakfalse \clubpenalty \@M \else \clubpenalty \@clubpe
nalty \everypar {}\fi }\if@noitemarg \@noitemargfalse \if@nmbrlist \refstepcoun
ter \@listctr \fi \fi \sbox \@tempboxa {\makelabel {#1}}\global \setbox \@label
s \hbox {\unhbox \@labels \hskip \itemindent \hskip -\labelwidth \hskip -\label
sep \ifdim \wd \@tempboxa >\labelwidth \box \@tempboxa \else \hbox to\labelwidt
h {\unhbox \@tempboxa }\fi \hskip \labelsep }\ignorespaces 
#1<-\@itemlabel 
{\iffalse}
{false}
{\iffalse}
{false}
{\ifhmode}
{false}
{\iftrue}
{true}
{\iffalse}
{false}

\addpenalty #1->\ifvmode \if@minipage \else \if@nobreak \else \ifdim \lastskip 
=\z@ \penalty #1\relax \else \@tempskipb \lastskip \vskip -\lastskip \penalty #
1\vskip \@tempskipb \fi \fi \fi \else \@noitemerr \fi 
#1<-\@beginparpenalty 
{\ifvmode}
{true}
{\iffalse}
{false}
{\iffalse}
{false}
{\ifdim}
{true}
{\penalty}
{\relax}
{\else}
{\fi}
{\fi}
{\else}

\addvspace #1->\ifvmode \if@minipage \else \ifdim \lastskip =\z@ \vskip #1\rela
x \else \@tempskipb #1\relax \@xaddvskip \fi \fi \else \@noitemerr \fi 
#1<-\@topsep 
{\ifvmode}
{true}
{\iffalse}
{false}
{\ifdim}
{true}
{\vskip}
{\relax}
{\else}
{\fi}
{\else}

\addvspace #1->\ifvmode \if@minipage \else \ifdim \lastskip =\z@ \vskip #1\rela
x \else \@tempskipb #1\relax \@xaddvskip \fi \fi \else \@noitemerr \fi 
#1<--\parskip 
{\ifvmode}
{true}
{\iffalse}
{false}
{\ifdim}
{false}
{\skip15}
{\relax}

\@xaddvskip ->\ifdim \lastskip <\@tempskipb \vskip -\lastskip \vskip \@tempskip
b \else \ifdim \@tempskipb <\z@ \ifdim \lastskip <\z@ \else \advance \@tempskip
b \lastskip \vskip -\lastskip \vskip \@tempskipb \fi \fi \fi 
{\ifdim}
{false}
{\ifdim}
{false}
{\fi}
{\fi}
{\fi}
{\else}
{\fi}
{\else}
{\global}

\@inlabeltrue ->\let \if@inlabel \iftrue 
{\fi}
{\everypar}
{\iftrue}
{true}

\@noitemargfalse ->\let \if@noitemarg \iffalse 
{\let}
{\iffalse}
{false}
{\fi}

\sbox #1#2->\setbox #1\hbox {\color@setgroup #2\color@endgroup }
#1<-\@tempboxa 
#2<-\makelabel {\@itemlabel }
{\setbox}
{restricted horizontal mode: \relax}

\makelabel #1->#1
#1<-\@itemlabel 

\@itemlabel ->
{\relax}
{end-group character }}
{vertical mode: \global}
{restricted horizontal mode: \unhbox}
{\hskip}
{\hskip}
{\hskip}
{\ifdim}
{false}
{\hbox}
{\unhbox}
{end-group character }}
{\fi}
{\hskip}
{end-group character }}
{vertical mode: \ignorespaces}
{\relax}

\par ->\if@newlist \advance \par@deathcycles \@ne \ifnum \par@deathcycles >\@m 
\@noitemerr {\@@par }\fi \else {\@@par }\fi 
{\iftrue}
{true}
{\advance}
{\ifnum}
{false}
{\else}

\par ->\if@newlist \advance \par@deathcycles \@ne \ifnum \par@deathcycles >\@m 
\@noitemerr {\@@par }\fi \else {\@@par }\fi 
{\iftrue}
{true}
{\advance}
{\ifnum}
{false}
{\else}

\textsc ->\protect \textsc  
{\relax}

\textsc  #1->\ifmmode \nfss@text {\scshape #1}\else \hmode@bgroup \text@command
 {#1}\scshape \check@icl #1\check@icr \expandafter \egroup \fi 
#1<-\LARGE Texas A$\&$M University
{\ifmmode}
{false}

\hmode@bgroup ->\leavevmode \bgroup 

\leavevmode ->\unhbox \voidb@x 
{\unhbox}
\everypar->\@minipagefalse \global \@newlistfalse \if@inlabel \global \@inlabel
false {\setbox \z@ \lastbox \ifvoid \z@ \kern -\itemindent \fi }\box \@labels \
penalty \z@ \fi \if@nobreak \@nobreakfalse \clubpenalty \@M \else \clubpenalty 
\@clubpenalty \everypar {}\fi 

\@minipagefalse ->\global \let \if@minipage \iffalse 
{horizontal mode: \global}
{\global}

\@newlistfalse ->\let \if@newlist \iffalse 
{\iftrue}
{true}
{\global}

\@inlabelfalse ->\let \if@inlabel \iffalse 
{begin-group character {}
{\setbox}
{\ifvoid}
{false}
{end-group character }}
{restoring \box0=void}
{\box}
{\penalty}
{\fi}
{\iffalse}
{false}
{\clubpenalty}
{\everypar}
{\fi}
{\unhbox}
{begin-group character {}

\text@command #1->\def \reserved@a {#1}\ifx \reserved@a \@empty \let \check@icl
 \@empty \let \check@icr \@empty \else \ifx \reserved@a \space \let \check@icl 
\@empty \let \check@icr \@empty \else \check@nocorr@ #1\nocorr \@nil \fi \fi 
#1<-\LARGE Texas A$\&$M University
{\def}
{\ifx}
{false}
{\ifx}
{false}

\check@nocorr@ #1#2\nocorr #3\@nil ->\let \check@icl \maybe@ic \def \check@icr 
{\ifvmode \else \aftergroup \maybe@ic \fi }\def \reserved@a {\nocorr }\def \res
erved@b {#1}\def \reserved@c {#3}\ifx \reserved@a \reserved@b \ifx \reserved@c 
\@empty \let \check@icl \@empty \else \let \check@icl \@empty \let \check@icr \
@empty \fi \else \ifx \reserved@c \@empty \else \let \check@icr \@empty \fi \fi
 
#1<-\LARGE 
#2<-Texas A$\&$M University
#3<-
{\let}
{\def}
{\def}
{\def}
{\def}
{\ifx}
{false}
{\ifx}
{true}
{\else}
{\fi}
{\fi}
{\fi}

\scshape ->\protect \scshape  
{\relax}

\scshape  ->\not@math@alphabet \scshape \relax \fontshape \scdefault \selectfon
t 

\not@math@alphabet #1#2->\relax \ifmmode \@latex@error {Command \noexpand #1inv
alid in math mode}{Please \ifx #2\relax define a new math alphabet
if you want to use a special font in math mode\else use the math alphabet \noex
pand #2instead of the #1command\fi . }\fi 
#1<-\scshape 
#2<-\relax 
{\relax}
{\ifmmode}
{false}

\fontshape ->\protect \fontshape  
{\relax}

\fontshape  #1->\edef \f@shape {#1}
#1<-\scdefault 
{\edef}

\scdefault ->sc

\selectfont ->\protect \selectfont  
{\relax}

\selectfont  ->\ifx \f@linespread \baselinestretch \else \set@fontsize \baselin
estretch \f@size \f@baselineskip \fi \xdef \font@name {\csname \curr@fontshape 
/\f@size \endcsname }\pickup@font \font@name \size@update \enc@update 
{\ifx}
{true}
{\else}
{\xdef}
{\csname}

\curr@fontshape ->\f@encoding /\f@family /\f@series /\f@shape 

\f@encoding ->OT1

\f@family ->cmr

\f@series ->m

\f@shape ->sc

\f@size ->10.95

\pickup@font ->\expandafter \ifx \font@name \relax \define@newfont \fi 
{\expandafter}

\font@name ->\OT1/cmr/m/sc/10.95 
{\ifx}
{true}

\define@newfont ->\begingroup \let \typeout \@font@info \escapechar \m@ne \expa
ndafter \expandafter \expandafter \split@name \expandafter \string \font@name \
@nil \try@load@fontshape \expandafter \ifx \csname \curr@fontshape \endcsname \
relax \wrong@fontshape \else \extract@font \fi \endgroup 
{\begingroup}
{\let}
{\escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OT1/cmr/m/sc/10.95 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-m
#4<-sc
#5<-10.95
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OT1

f@family ->cmr
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->sc
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->sc
{expandafter}

OT1/cmr/m/sc -><5><6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10
 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->10.95
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9><10><10.95><12><14.4><17.28><20.
74><24.88>cmcsc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->10.95
{false}

reserved@f ->extract@rangefontinfo <7><8><9><10><10.95><12><14.4><17.28><20.74>
<24.88>cmcsc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->10.95
{false}

reserved@f ->extract@rangefontinfo <8><9><10><10.95><12><14.4><17.28><20.74><24
.88>cmcsc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->10.95
{false}

reserved@f ->extract@rangefontinfo <9><10><10.95><12><14.4><17.28><20.74><24.88
>cmcsc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->10.95
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
csc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->10.95
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmcsc1
0<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->10.95
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-12

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-14.4

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-17.28

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmcsc10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmcsc10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmcsc10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->10.95
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmcsc10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OT1/cmr/m/sc/10.95 

external@font ->cmcsc10 at10.95pt
{relax}

font@name ->OT1/cmr/m/sc/10.95 
{select font cmcsc10 at 10.95pt}
{relax}
{csname}

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45
{hyphenchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->sc

OT1/cmr/m/sc -><5><6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10
 

<5><6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/n/10.95}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=relax}
{restoring reserved@b=macro:->LARGE }
{restoring reserved@a=macro:->nocorr }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->10.95}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring \escapechar=92}
{restoring \typeout=macro:#1->\begingroup \set@display@protect \ETC.}
{\fi}

\font@name ->\OT1/cmr/m/sc/10.95 
{select font cmcsc10 at 10.95pt}
{\relax}
{\relax}

\check@icl ->\futurelet \@let@token \maybe@ic@ 
{\futurelet}

\maybe@ic@ ->\ifdim \fontdimen \@ne \font >\z@ \else \maybe@ictrue \expandafter
 \@tfor \expandafter \reserved@a \expandafter :\expandafter =\nocorrlist \do \t
@st@ic \ifmaybe@ic \sw@slant \fi \fi 
{\ifdim}
{false}

\maybe@ictrue ->\let \ifmaybe@ic \iftrue 
{\let}
{\expandafter}
{\expandafter}
{\expandafter}
{\expandafter}

\nocorrlist ->,.

\@tfor #1:=->\@tf@r #1 
#1<-\reserved@a 

\@tf@r #1#2\do #3->\def \@fortmp {#2}\ifx \@fortmp \space \else \@tforloop #2\@
nil \@nil \@@ #1{#3}\fi 
#1<-\reserved@a 
#2<- ,.
#3<-\t@st@ic 
{\def}
{\ifx}
{false}

\@tforloop #1#2\@@ #3#4->\def #3{#1}\ifx #3\@nnil \expandafter \@fornoop \else 
#4\relax \expandafter \@tforloop \fi #2\@@ #3{#4}
#1<-,
#2<-.\@nil \@nil 
#3<-\reserved@a 
#4<-\t@st@ic 
{\def}
{\ifx}
{false}

\t@st@ic ->\expandafter \let \expandafter \reserved@b \expandafter =\reserved@a
 \relax \ifx \reserved@b \@let@token \maybe@icfalse \@break@tfor \fi 
{\expandafter}
{\expandafter}
{\expandafter}

\reserved@a ->,
{\let}
{\relax}
{\ifx}
{false}
{\relax}
{\expandafter}
{\fi}

\@tforloop #1#2\@@ #3#4->\def #3{#1}\ifx #3\@nnil \expandafter \@fornoop \else 
#4\relax \expandafter \@tforloop \fi #2\@@ #3{#4}
#1<-.
#2<-\@nil \@nil 
#3<-\reserved@a 
#4<-\t@st@ic 
{\def}
{\ifx}
{false}

\t@st@ic ->\expandafter \let \expandafter \reserved@b \expandafter =\reserved@a
 \relax \ifx \reserved@b \@let@token \maybe@icfalse \@break@tfor \fi 
{\expandafter}
{\expandafter}
{\expandafter}

\reserved@a ->.
{\let}
{\relax}
{\ifx}
{false}
{\relax}
{\expandafter}
{\fi}

\@tforloop #1#2\@@ #3#4->\def #3{#1}\ifx #3\@nnil \expandafter \@fornoop \else 
#4\relax \expandafter \@tforloop \fi #2\@@ #3{#4}
#1<-\@nil 
#2<-\@nil 
#3<-\reserved@a 
#4<-\t@st@ic 
{\def}
{\ifx}
{true}
{\expandafter}
{\else}

\@fornoop #1\@@ #2#3->
#1<-\@nil 
#2<-\reserved@a 
#3<-\t@st@ic 
{\fi}
{\iftrue}
{true}

\sw@slant ->\ifdim \lastskip =\z@ \fix@penalty \else \skip@ \lastskip \unskip \
fix@penalty \hskip \skip@ \fi 
{\ifdim}
{true}

\fix@penalty ->\ifnum \lastpenalty =\z@ \@@italiccorr \else \count@ \lastpenalt
y \unpenalty \@@italiccorr \penalty \count@ \fi 
{\ifnum}
{true}
{\/}
{\else}
{\else}
{\fi}
{\fi}

\LARGE ->\@setfontsize \LARGE \@xviipt {22}

\@setfontsize #1#2#3->\@nomath #1\ifx \protect \@typeset@protect \let \@currsiz
e #1\fi \fontsize {#2}{#3}\selectfont 
#1<-\LARGE 
#2<-\@xviipt 
#3<-22

\@nomath #1->\relax \ifmmode \@font@warning {Command \noexpand #1invalid in mat
h mode}\fi 
#1<-\LARGE 
{\relax}
{\ifmmode}
{false}
{\ifx}
{true}
{\let}
{\fi}

\fontsize ->\protect \fontsize  
{\relax}

\fontsize  #1#2->\set@fontsize \baselinestretch {#1}{#2}
#1<-\@xviipt 
#2<-22

\set@fontsize #1#2#3->\@defaultunits \@tempdimb #2pt\relax \@nnil \edef \f@size
 {\strip@pt \@tempdimb }\@defaultunits \@tempskipa #3pt\relax \@nnil \edef \f@b
aselineskip {\the \@tempskipa }\edef \f@linespread {#1}\let \baselinestretch \f
@linespread \def \size@update {\baselineskip \f@baselineskip \relax \baselinesk
ip \f@linespread \baselineskip \normalbaselineskip \baselineskip \setbox \strut
box \hbox {\vrule \@height .7\baselineskip \@depth .3\baselineskip \@width \z@ 
}\let \size@update \relax }
#1<-\baselinestretch 
#2<-\@xviipt 
#3<-22

\@defaultunits ->\afterassignment \remove@to@nnil 
{\afterassignment}
{\dimen15}

\@xviipt ->17.28

\remove@to@nnil #1\@nnil ->
#1<-\relax 
{\edef}

\strip@pt ->\expandafter \rem@pt \the 
{\expandafter}
{\the}

\rem@pt #1.#2pt->#1\ifnum #2>\z@ .#2\fi 
#1<-17
#2<-28
{\ifnum}
{true}
{\fi}

\@defaultunits ->\afterassignment \remove@to@nnil 
{\afterassignment}
{\skip14}

\remove@to@nnil #1\@nnil ->
#1<-\relax 
{\edef}
{\edef}

\baselinestretch ->
{\let}
{\def}

\selectfont ->\protect \selectfont  
{\relax}

\selectfont  ->\ifx \f@linespread \baselinestretch \else \set@fontsize \baselin
estretch \f@size \f@baselineskip \fi \xdef \font@name {\csname \curr@fontshape 
/\f@size \endcsname }\pickup@font \font@name \size@update \enc@update 
{\ifx}
{true}
{\else}
{\xdef}
{\csname}

\curr@fontshape ->\f@encoding /\f@family /\f@series /\f@shape 

\f@encoding ->OT1

\f@family ->cmr

\f@series ->m

\f@shape ->sc

\f@size ->17.28

\pickup@font ->\expandafter \ifx \font@name \relax \define@newfont \fi 
{\expandafter}

\font@name ->\OT1/cmr/m/sc/17.28 
{\ifx}
{true}

\define@newfont ->\begingroup \let \typeout \@font@info \escapechar \m@ne \expa
ndafter \expandafter \expandafter \split@name \expandafter \string \font@name \
@nil \try@load@fontshape \expandafter \ifx \csname \curr@fontshape \endcsname \
relax \wrong@fontshape \else \extract@font \fi \endgroup 
{\begingroup}
{\let}
{\escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OT1/cmr/m/sc/17.28 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-m
#4<-sc
#5<-17.28
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OT1

f@family ->cmr
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->sc
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->sc
{expandafter}

OT1/cmr/m/sc -><5><6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10
 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9><10><10.95><12><14.4><17.28><20.
74><24.88>cmcsc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <7><8><9><10><10.95><12><14.4><17.28><20.74>
<24.88>cmcsc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <8><9><10><10.95><12><14.4><17.28><20.74><24
.88>cmcsc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <9><10><10.95><12><14.4><17.28><20.74><24.88
>cmcsc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
csc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmcsc1
0<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmcsc10<-*>@n
il <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <14.4><17.28><20.74><24.88>cmcsc10<-*>@nil <
@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-14.4

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-14.4
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-14.4
#2<-
#3<-17.28><20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <17.28><20.74><24.88>cmcsc10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-17.28

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-17.28
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-17.28
#2<-
#3<-20.74><24.88>cmcsc10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmcsc10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmcsc10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmcsc10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->17.28
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmcsc10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OT1/cmr/m/sc/17.28 

external@font ->cmcsc10 at17.28pt
{relax}

font@name ->OT1/cmr/m/sc/17.28 
{select font cmcsc10 at 17.28pt}
{relax}
{csname}

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45
{hyphenchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->sc

OT1/cmr/m/sc -><5><6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10
 

<5><6><7><8><9><10><10.95><12><14.4><17.28><20.74><24.88>cmcsc10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/10.95}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring \escapechar=92}
{restoring \typeout=macro:#1->\begingroup \set@display@protect \ETC.}
{\fi}

\font@name ->\OT1/cmr/m/sc/17.28 
{select font cmcsc10 at 17.28pt}

\size@update ->\baselineskip \f@baselineskip \relax \baselineskip \f@linespread
 \baselineskip \normalbaselineskip \baselineskip \setbox \strutbox \hbox {\vrul
e \@height .7\baselineskip \@depth .3\baselineskip \@width \z@ }\let \size@upda
te \relax 
{\baselineskip}

\f@baselineskip ->22.0pt
{\relax}
{\baselineskip}

\f@linespread ->
{\skip12}
{\setbox}
{restricted horizontal mode: \vrule}

\@height ->height

\@depth ->depth

\@width ->width
{end-group character }}
{horizontal mode: \let}
{\relax}
{the letter T}
{blank space  }
{the letter A}
{math shift character $}
\everymath->\check@mathfonts \the \everymath 

\check@mathfonts ->\ifx \glb@currsize \f@size \else \glb@settings \init@restore
@glb@settings \fi \let \curr@math@size \f@size \def \init@restore@glb@settings 
{\aftergroup \restglb@settings }
{math mode: \ifx}
{false}

\glb@settings ->\expandafter \ifx \csname S@\f@size \endcsname \relax \calculat
e@math@sizes \fi \csname S@\f@size \endcsname \ifmath@fonts \begingroup \escape
char \m@ne \csname mv@\math@version \endcsname \globaldefs \@ne \math@fonts \le
t \glb@currsize \f@size \endgroup \the \every@math@size \fi 
{\expandafter}
{\csname}

\f@size ->17.28
{\ifx}
{false}
{\csname}

\f@size ->17.28

\S@17.28 ->\gdef \tf@size {\@xviipt }\gdef \sf@size {\@xiipt }\gdef \ssf@size {
\@xpt }
{\gdef}
{\gdef}
{\gdef}
{\iftrue}
{true}
{\begingroup}
{\escapechar}
{csname}

math@version ->normal

mv@normal ->getanddefine@fonts symoperators OT1/cmr/m/n getanddefine@fonts syml
etters OML/cmm/m/it getanddefine@fonts symsymbols OMS/cmsy/m/n getanddefine@fon
ts symlargesymbols OMX/cmex/m/n install@mathalphabet mathsf  {select@group math
sf  M@OT1 OT1/cmss/m/n }install@mathalphabet mathit  {select@group mathit  M@OT
1 OT1/cmr/m/it }install@mathalphabet mathtt  {select@group mathtt  M@OT1 OT1/cm
tt/m/n }getanddefine@fonts symboldoperators OT1/cmr/bx/n getanddefine@fonts sym
boldletters OML/cmm/b/it getanddefine@fonts symboldsymbols OMS/cmsy/b/n 

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symoperators 
#2<-OT1/cmr/m/n 
{xdef}
{csname}
{string}

tf@size ->@xviipt 

@xviipt ->17.28

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OT1/cmr/m/n/17.28 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OT1/cmr/m/n/17.28 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-m
#4<-n
#5<-17.28
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OT1

f@family ->cmr
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n
{expandafter}

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74>
<24.88>cmr17

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4
>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*
>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cm
r12<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@n
il <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12
<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil 
<
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17
.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-
#3<-10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28
><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20
.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-gen*cmr
#3<-10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>
cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-cmr10
#3<-14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@ni
l <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-14.4

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-14.4
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-14.4
#2<-cmr12
#3<-17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-17.28

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-17.28
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-17.28
#2<-
#3<-20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmr17
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmr17
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmr17
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->17.28
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmr17

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OT1/cmr/m/n/17.28 

external@font ->cmr17 at17.28pt
{relax}

font@name ->OT1/cmr/m/n/17.28 
{select font cmr17}
{relax}
{csname}

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45
{hyphenchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 

<5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

sf@size ->@xiipt 

@xiipt ->12

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OT1/cmr/m/n/12 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OT1/cmr/m/n/12 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-m
#4<-n
#5<-12
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OT1

f@family ->cmr
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n
{expandafter}

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74>
<24.88>cmr17

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4
>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*
>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cm
r12<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@n
il <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12
<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil 
<
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17
.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-
#3<-10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28
><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20
.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-gen*cmr
#3<-10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->12
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmr
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmr*
{if}
{false}
{expandafter}

remove@star #1*->#1
#1<-cmr

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmr
{def}
{def}
{def}
{fi}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<-10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 
{edef}

mandatory@arg ->cmr

f@size ->12

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->12
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmr12

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OT1/cmr/m/n/12 

external@font ->cmr12 at12.0pt
{relax}

font@name ->OT1/cmr/m/n/12 
{select font cmr12}
{relax}
{csname}

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45
{hyphenchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 

<5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

ssf@size ->@xpt 

@xpt ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OT1/cmr/m/n/10 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OT1/cmr/m/n/10 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-m
#4<-n
#5<-10
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OT1

f@family ->cmr
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n
{expandafter}

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74>
<24.88>cmr17

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4
>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*
>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cm
r12<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@n
il <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12
<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil 
<
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17
.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-
#3<-10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28
><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <
{def}
{ifdim}

f@size ->10
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-12

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmr
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmr*
{if}
{false}
{expandafter}

remove@star #1*->#1
#1<-cmr

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmr
{def}
{def}
{def}
{fi}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<-10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 
{edef}

mandatory@arg ->cmr

f@size ->10

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->10
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmr10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OT1/cmr/m/n/10 

external@font ->cmr10 at10.0pt
{relax}

font@name ->OT1/cmr/m/n/10 
{select font cmr10}
{relax}
{csname}

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45
{hyphenchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 

<5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{edef}

math@fonts ->

textfont@name ->OT1/cmr/m/n/17.28 

scriptfont@name ->OT1/cmr/m/n/12 

font@name ->OT1/cmr/m/n/10 

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symletters 
#2<-OML/cmm/m/it 
{xdef}
{csname}
{string}

tf@size ->@xviipt 

@xviipt ->17.28

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OML/cmm/m/it/17.28 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OML/cmm/m/it/17.28 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OML
#2<-cmm
#3<-m
#4<-it
#5<-17.28
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OML

f@family ->cmm
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it
{expandafter}

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-
*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14
.4><17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@
nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4>
<17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil
 <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17
.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28
><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmmi
#3<-10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10.95>cmmi10<12><14.4><17.28><20.74><24.88>
cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-cmmi10
#3<-12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmmi12<-*>@ni
l <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <14.4><17.28><20.74><24.88>cmmi12<-*>@nil <@
nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-14.4

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-14.4
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-14.4
#2<-
#3<-17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-17.28

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-17.28
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-17.28
#2<-
#3<-20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmmi12
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmmi12
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmmi12
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->17.28
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmmi12

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OML/cmm/m/it/17.28 

external@font ->cmmi12 at17.28pt
{relax}

font@name ->OML/cmm/m/it/17.28 
{select font cmmi12 at 17.28pt}
{relax}
{csname}

f@encoding ->OML

f@family ->cmm

OML+cmm ->skewchar font 127
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 

<5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12 -
>
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

sf@size ->@xiipt 

@xiipt ->12

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OML/cmm/m/it/12 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OML/cmm/m/it/12 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OML
#2<-cmm
#3<-m
#4<-it
#5<-12
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OML

f@family ->cmm
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it
{expandafter}

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-
*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14
.4><17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@
nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4>
<17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil
 <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17
.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28
><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmmi
#3<-10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10.95>cmmi10<12><14.4><17.28><20.74><24.88>
cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-cmmi10
#3<-12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmmi12<-*>@ni
l <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->12
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-14.4

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-17.28

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmmi12
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmmi12
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmmi12
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->12
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmmi12

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OML/cmm/m/it/12 

external@font ->cmmi12 at12.0pt
{relax}

font@name ->OML/cmm/m/it/12 
{select font cmmi12}
{relax}
{csname}

f@encoding ->OML

f@family ->cmm

OML+cmm ->skewchar font 127
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 

<5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12 -
>
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

ssf@size ->@xpt 

@xpt ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OML/cmm/m/it/10 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OML/cmm/m/it/10 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OML
#2<-cmm
#3<-m
#4<-it
#5<-10
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OML

f@family ->cmm
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it
{expandafter}

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-
*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14
.4><17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@
nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4>
<17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil
 <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17
.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28
><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmmi
#3<-10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <
{def}
{ifdim}

f@size ->10
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-10.95

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmmi10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmmi10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmmi10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<-12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->10
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmmi10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OML/cmm/m/it/10 

external@font ->cmmi10 at10.0pt
{relax}

font@name ->OML/cmm/m/it/10 
{select font cmmi10}
{relax}
{csname}

f@encoding ->OML

f@family ->cmm

OML+cmm ->skewchar font 127
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 

<5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12 -
>
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{edef}

math@fonts ->textfont symoperators OT1/cmr/m/n/17.28 scriptfont symoperators OT
1/cmr/m/n/12 scriptscriptfont symoperators OT1/cmr/m/n/10 

textfont@name ->OML/cmm/m/it/17.28 

scriptfont@name ->OML/cmm/m/it/12 

font@name ->OML/cmm/m/it/10 

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symsymbols 
#2<-OMS/cmsy/m/n 
{xdef}
{csname}
{string}

tf@size ->@xviipt 

@xviipt ->17.28

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OMS/cmsy/m/n/17.28 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OMS/cmsy/m/n/17.28 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMS
#2<-cmsy
#3<-m
#4<-n
#5<-17.28
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OMS

f@family ->cmsy
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n
{expandafter}

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cm
sy10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil
 <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9><10>gen*cmsy<10.95><12><14.4><17
.28><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <7><8><9><10>gen*cmsy<10.95><12><14.4><17.28
><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <8><9><10>gen*cmsy<10.95><12><14.4><17.28><2
0.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <9><10>gen*cmsy<10.95><12><14.4><17.28><20.7
4><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-
#3<-10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10>gen*cmsy<10.95><12><14.4><17.28><20.74><
24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-gen*cmsy
#3<-10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmsy10
<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmsy10<-*>@ni
l <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <14.4><17.28><20.74><24.88>cmsy10<-*>@nil <@
nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-14.4

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-14.4
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-14.4
#2<-
#3<-17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <17.28><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-17.28

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-17.28
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-17.28
#2<-
#3<-20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmsy10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmsy10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmsy10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->17.28
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmsy10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OMS/cmsy/m/n/17.28 

external@font ->cmsy10 at17.28pt
{relax}

font@name ->OMS/cmsy/m/n/17.28 
{select font cmsy10 at 17.28pt}
{relax}
{csname}

f@encoding ->OMS

f@family ->cmsy

OMS+cmsy ->skewchar font 48
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 

<5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

sf@size ->@xiipt 

@xiipt ->12

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OMS/cmsy/m/n/12 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OMS/cmsy/m/n/12 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMS
#2<-cmsy
#3<-m
#4<-n
#5<-12
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OMS

f@family ->cmsy
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n
{expandafter}

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cm
sy10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil
 <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9><10>gen*cmsy<10.95><12><14.4><17
.28><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <7><8><9><10>gen*cmsy<10.95><12><14.4><17.28
><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <8><9><10>gen*cmsy<10.95><12><14.4><17.28><2
0.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <9><10>gen*cmsy<10.95><12><14.4><17.28><20.7
4><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-
#3<-10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10>gen*cmsy<10.95><12><14.4><17.28><20.74><
24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-gen*cmsy
#3<-10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmsy10
<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmsy10<-*>@ni
l <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-14.4

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-17.28

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmsy10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmsy10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmsy10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->12
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmsy10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OMS/cmsy/m/n/12 

external@font ->cmsy10 at12.0pt
{relax}

font@name ->OMS/cmsy/m/n/12 
{select font cmsy10 at 12.0pt}
{relax}
{csname}

f@encoding ->OMS

f@family ->cmsy

OMS+cmsy ->skewchar font 48
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 

<5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

ssf@size ->@xpt 

@xpt ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OMS/cmsy/m/n/10 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OMS/cmsy/m/n/10 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMS
#2<-cmsy
#3<-m
#4<-n
#5<-10
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OMS

f@family ->cmsy
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n
{expandafter}

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cm
sy10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil
 <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9><10>gen*cmsy<10.95><12><14.4><17
.28><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <7><8><9><10>gen*cmsy<10.95><12><14.4><17.28
><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <8><9><10>gen*cmsy<10.95><12><14.4><17.28><2
0.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <9><10>gen*cmsy<10.95><12><14.4><17.28><20.7
4><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-
#3<-10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <10>gen*cmsy<10.95><12><14.4><17.28><20.74><
24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-gen*cmsy
#3<-10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <
{def}
{ifdim}

f@size ->10
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmsy
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmsy*
{if}
{false}
{expandafter}

remove@star #1*->#1
#1<-cmsy

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmsy
{def}
{def}
{def}
{fi}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<-10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 
{edef}

mandatory@arg ->cmsy

f@size ->10

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->10
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmsy10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OMS/cmsy/m/n/10 

external@font ->cmsy10 at10.0pt
{relax}

font@name ->OMS/cmsy/m/n/10 
{select font cmsy10}
{relax}
{csname}

f@encoding ->OMS

f@family ->cmsy

OMS+cmsy ->skewchar font 48
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 

<5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{edef}

math@fonts ->textfont symoperators OT1/cmr/m/n/17.28 scriptfont symoperators OT
1/cmr/m/n/12 scriptscriptfont symoperators OT1/cmr/m/n/10 textfont symletters O
ML/cmm/m/it/17.28 scriptfont symletters OML/cmm/m/it/12 scriptscriptfont symlet
ters OML/cmm/m/it/10 

textfont@name ->OMS/cmsy/m/n/17.28 

scriptfont@name ->OMS/cmsy/m/n/12 

font@name ->OMS/cmsy/m/n/10 

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symlargesymbols 
#2<-OMX/cmex/m/n 
{xdef}
{csname}
{string}

tf@size ->@xviipt 

@xviipt ->17.28

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OMX/cmex/m/n/17.28 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OMX/cmex/m/n/17.28 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMX
#2<-cmex
#3<-m
#4<-n
#5<-17.28
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OMX

f@family ->cmex
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n
{expandafter}

OMX/cmex/m/n -><-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.
88>cmex10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>
cmex10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<--8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-
#2<-8->
{if}
{false}
{expandafter}
{fi}

check@range #1-#2>#3<#4@nnil ->ifnot@nil {#3}{def reserved@f {extract@rangefont
info <#4@nnil }upper@bound 0#2p@ ifdim upper@bound =z@ upper@bound maxdimen fi 
ifdim f@size p@ <upper@bound lower@bound 0#1p@ ifdim f@size p@ <lower@bound els
e set@simple@size@args #3<#4@nnil execute@size@function sizefn@info ifx externa
l@font @empty else let reserved@f @empty fi fi fi reserved@f }
#1<-
#2<-8
#3<-cmex7
#4<-8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <

ifnot@nil #1->def reserved@a {#1}ifx reserved@a @nnil expandafter @gobble else 
expandafter @firstofone fi 
#1<-cmex7
{def}
{ifx}
{false}
{expandafter}
{fi}

@firstofone #1->#1
#1<-def reserved@f {extract@rangefontinfo <8>cmex8<9>cmex9<10><10.95><12><14.4>
<17.28><20.74><24.88>cmex10<-*>@nil <@nnil }upper@bound 08p@ ifdim upper@bound 
=z@ upper@bound maxdimen fi ifdim f@size p@ <upper@bound lower@bound 0p@ ifdim 
f@size p@ <lower@bound else set@simple@size@args cmex7<8>cmex8<9>cmex9<10><10.9
5><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <@nnil execute@size@function si
zefn@info ifx external@font @empty else let reserved@f @empty fi fi fi reserved
@f 
{def}
{dimen19}
{ifdim}
{false}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <8>cmex8<9>cmex9<10><10.95><12><14.4><17.28>
<20.74><24.88>cmex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-cmex8
#3<-9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <9>cmex9<10><10.95><12><14.4><17.28><20.74><
24.88>cmex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-cmex9
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
ex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmex10
<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmex10<-*>@ni
l <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <14.4><17.28><20.74><24.88>cmex10<-*>@nil <@
nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-14.4

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-14.4
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-14.4
#2<-
#3<-17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <17.28><20.74><24.88>cmex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-17.28

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-17.28
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-17.28
#2<-
#3<-20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmex10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmex10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmex10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->17.28
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmex10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OMX/cmex/m/n/17.28 

external@font ->cmex10 at17.28pt
{relax}

font@name ->OMX/cmex/m/n/17.28 
{select font cmex10 at 17.28pt}
{relax}
{csname}

f@encoding ->OMX

f@family ->cmex

OMX+cmex ->
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n

OMX/cmex/m/n -><-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.
88>cmex10 

<-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>cmex10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring dimen19=0.0pt}
{restoring reserved@f=undefined}
{restoring reserved@a=macro:->@nil }
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

sf@size ->@xiipt 

@xiipt ->12

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OMX/cmex/m/n/12 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OMX/cmex/m/n/12 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMX
#2<-cmex
#3<-m
#4<-n
#5<-12
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OMX

f@family ->cmex
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n
{expandafter}

OMX/cmex/m/n -><-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.
88>cmex10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>
cmex10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<--8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-
#2<-8->
{if}
{false}
{expandafter}
{fi}

check@range #1-#2>#3<#4@nnil ->ifnot@nil {#3}{def reserved@f {extract@rangefont
info <#4@nnil }upper@bound 0#2p@ ifdim upper@bound =z@ upper@bound maxdimen fi 
ifdim f@size p@ <upper@bound lower@bound 0#1p@ ifdim f@size p@ <lower@bound els
e set@simple@size@args #3<#4@nnil execute@size@function sizefn@info ifx externa
l@font @empty else let reserved@f @empty fi fi fi reserved@f }
#1<-
#2<-8
#3<-cmex7
#4<-8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <

ifnot@nil #1->def reserved@a {#1}ifx reserved@a @nnil expandafter @gobble else 
expandafter @firstofone fi 
#1<-cmex7
{def}
{ifx}
{false}
{expandafter}
{fi}

@firstofone #1->#1
#1<-def reserved@f {extract@rangefontinfo <8>cmex8<9>cmex9<10><10.95><12><14.4>
<17.28><20.74><24.88>cmex10<-*>@nil <@nnil }upper@bound 08p@ ifdim upper@bound 
=z@ upper@bound maxdimen fi ifdim f@size p@ <upper@bound lower@bound 0p@ ifdim 
f@size p@ <lower@bound else set@simple@size@args cmex7<8>cmex8<9>cmex9<10><10.9
5><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <@nnil execute@size@function si
zefn@info ifx external@font @empty else let reserved@f @empty fi fi fi reserved
@f 
{def}
{dimen19}
{ifdim}
{false}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <8>cmex8<9>cmex9<10><10.95><12><14.4><17.28>
<20.74><24.88>cmex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-cmex8
#3<-9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <9>cmex9<10><10.95><12><14.4><17.28><20.74><
24.88>cmex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-cmex9
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
ex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmex10
<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmex10<-*>@ni
l <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->12
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-14.4

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-17.28

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmex10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmex10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmex10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->12
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmex10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OMX/cmex/m/n/12 

external@font ->cmex10 at12.0pt
{relax}

font@name ->OMX/cmex/m/n/12 
{select font cmex10 at 12.0pt}
{relax}
{csname}

f@encoding ->OMX

f@family ->cmex

OMX+cmex ->
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n

OMX/cmex/m/n -><-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.
88>cmex10 

<-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>cmex10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring dimen19=0.0pt}
{restoring reserved@f=undefined}
{restoring reserved@a=macro:->@nil }
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

ssf@size ->@xpt 

@xpt ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OMX/cmex/m/n/10 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OMX/cmex/m/n/10 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMX
#2<-cmex
#3<-m
#4<-n
#5<-10
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OMX

f@family ->cmex
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n
{expandafter}

OMX/cmex/m/n -><-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.
88>cmex10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>
cmex10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<--8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-
#2<-8->
{if}
{false}
{expandafter}
{fi}

check@range #1-#2>#3<#4@nnil ->ifnot@nil {#3}{def reserved@f {extract@rangefont
info <#4@nnil }upper@bound 0#2p@ ifdim upper@bound =z@ upper@bound maxdimen fi 
ifdim f@size p@ <upper@bound lower@bound 0#1p@ ifdim f@size p@ <lower@bound els
e set@simple@size@args #3<#4@nnil execute@size@function sizefn@info ifx externa
l@font @empty else let reserved@f @empty fi fi fi reserved@f }
#1<-
#2<-8
#3<-cmex7
#4<-8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <

ifnot@nil #1->def reserved@a {#1}ifx reserved@a @nnil expandafter @gobble else 
expandafter @firstofone fi 
#1<-cmex7
{def}
{ifx}
{false}
{expandafter}
{fi}

@firstofone #1->#1
#1<-def reserved@f {extract@rangefontinfo <8>cmex8<9>cmex9<10><10.95><12><14.4>
<17.28><20.74><24.88>cmex10<-*>@nil <@nnil }upper@bound 08p@ ifdim upper@bound 
=z@ upper@bound maxdimen fi ifdim f@size p@ <upper@bound lower@bound 0p@ ifdim 
f@size p@ <lower@bound else set@simple@size@args cmex7<8>cmex8<9>cmex9<10><10.9
5><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <@nnil execute@size@function si
zefn@info ifx external@font @empty else let reserved@f @empty fi fi fi reserved
@f 
{def}
{dimen19}
{ifdim}
{false}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <8>cmex8<9>cmex9<10><10.95><12><14.4><17.28>
<20.74><24.88>cmex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-cmex8
#3<-9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <9>cmex9<10><10.95><12><14.4><17.28><20.74><
24.88>cmex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-cmex9
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
ex10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmex10<-*>@nil <
{def}
{ifdim}

f@size ->10
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-10.95

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-12

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-14.4

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-17.28

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmex10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmex10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmex10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->10
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmex10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OMX/cmex/m/n/10 

external@font ->cmex10 at10.0pt
{relax}

font@name ->OMX/cmex/m/n/10 
{select font cmex10}
{relax}
{csname}

f@encoding ->OMX

f@family ->cmex

OMX+cmex ->
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n

OMX/cmex/m/n -><-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.
88>cmex10 

<-8>cmex7<8>cmex8<9>cmex9<10><10.95><12><14.4><17.28><20.74><24.88>cmex10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring dimen19=0.0pt}
{restoring reserved@f=undefined}
{restoring reserved@a=macro:->@nil }
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{edef}

math@fonts ->textfont symoperators OT1/cmr/m/n/17.28 scriptfont symoperators OT
1/cmr/m/n/12 scriptscriptfont symoperators OT1/cmr/m/n/10 textfont symletters O
ML/cmm/m/it/17.28 scriptfont symletters OML/cmm/m/it/12 scriptscriptfont symlet
ters OML/cmm/m/it/10 textfont symsymbols OMS/cmsy/m/n/17.28 scriptfont symsymbo
ls OMS/cmsy/m/n/12 scriptscriptfont symsymbols OMS/cmsy/m/n/10 

textfont@name ->OMX/cmex/m/n/17.28 

scriptfont@name ->OMX/cmex/m/n/12 

font@name ->OMX/cmex/m/n/10 
{gdef}
{gdef}
{gdef}

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symboldoperators 
#2<-OT1/cmr/bx/n 
{xdef}
{csname}
{string}

tf@size ->@xviipt 

@xviipt ->17.28

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OT1/cmr/bx/n/17.28 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OT1/cmr/bx/n/17.28 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-bx
#4<-n
#5<-17.28
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OT1

f@family ->cmr
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->bx

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->bx

f@shape ->n
{expandafter}

OT1/cmr/bx/n -><5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74>
<24.88>cmbx12 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24
.88>cmbx12

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-
*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14
.4><17.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@
nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4>
<17.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil
 <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17
.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28
><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmbx
#3<-10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10><10.95>cmbx10<12><14.4><17.28><20.74><24
.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10.95>cmbx10<12><14.4><17.28><20.74><24.88>
cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-cmbx10
#3<-12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmbx12<-*>@ni
l <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <14.4><17.28><20.74><24.88>cmbx12<-*>@nil <@
nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-14.4

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-14.4
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-14.4
#2<-
#3<-17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <17.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-17.28

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-17.28
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-17.28
#2<-
#3<-20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmbx12
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmbx12
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmbx12
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->17.28
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmbx12

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OT1/cmr/bx/n/17.28 

external@font ->cmbx12 at17.28pt
{relax}

font@name ->OT1/cmr/bx/n/17.28 
{select font cmbx12 at 17.28pt}
{relax}
{csname}

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45
{hyphenchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->bx

f@shape ->n

OT1/cmr/bx/n -><5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74>
<24.88>cmbx12 

<5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12 -
>
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

sf@size ->@xiipt 

@xiipt ->12

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OT1/cmr/bx/n/12 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OT1/cmr/bx/n/12 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-bx
#4<-n
#5<-12
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OT1

f@family ->cmr
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->bx

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->bx

f@shape ->n
{expandafter}

OT1/cmr/bx/n -><5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74>
<24.88>cmbx12 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24
.88>cmbx12

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-
*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14
.4><17.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@
nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4>
<17.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil
 <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17
.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28
><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmbx
#3<-10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10><10.95>cmbx10<12><14.4><17.28><20.74><24
.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10.95>cmbx10<12><14.4><17.28><20.74><24.88>
cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-cmbx10
#3<-12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmbx12<-*>@ni
l <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->12
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-14.4

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-17.28

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmbx12
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmbx12
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmbx12
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->12
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmbx12

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OT1/cmr/bx/n/12 

external@font ->cmbx12 at12.0pt
{relax}

font@name ->OT1/cmr/bx/n/12 
{select font cmbx12}
{relax}
{csname}

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45
{hyphenchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->bx

f@shape ->n

OT1/cmr/bx/n -><5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74>
<24.88>cmbx12 

<5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12 -
>
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

ssf@size ->@xpt 

@xpt ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OT1/cmr/bx/n/10 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OT1/cmr/bx/n/10 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-bx
#4<-n
#5<-10
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OT1

f@family ->cmr
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->bx

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->bx

f@shape ->n
{expandafter}

OT1/cmr/bx/n -><5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74>
<24.88>cmbx12 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24
.88>cmbx12

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-
*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14
.4><17.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@
nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4>
<17.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil
 <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17
.28><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28
><20.74><24.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmbx
#3<-10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <10><10.95>cmbx10<12><14.4><17.28><20.74><24
.88>cmbx12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <
{def}
{ifdim}

f@size ->10
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-10.95

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmbx10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmbx10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmbx10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<-12><14.4><17.28><20.74><24.88>cmbx12<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->10
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmbx10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OT1/cmr/bx/n/10 

external@font ->cmbx10 at10.0pt
{relax}

font@name ->OT1/cmr/bx/n/10 
{select font cmbx10}
{relax}
{csname}

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45
{hyphenchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->bx

f@shape ->n

OT1/cmr/bx/n -><5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74>
<24.88>cmbx12 

<5><6><7><8><9>gen*cmbx<10><10.95>cmbx10<12><14.4><17.28><20.74><24.88>cmbx12 -
>
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{edef}

math@fonts ->textfont symoperators OT1/cmr/m/n/17.28 scriptfont symoperators OT
1/cmr/m/n/12 scriptscriptfont symoperators OT1/cmr/m/n/10 textfont symletters O
ML/cmm/m/it/17.28 scriptfont symletters OML/cmm/m/it/12 scriptscriptfont symlet
ters OML/cmm/m/it/10 textfont symsymbols OMS/cmsy/m/n/17.28 scriptfont symsymbo
ls OMS/cmsy/m/n/12 scriptscriptfont symsymbols OMS/cmsy/m/n/10 textfont symlarg
esymbols OMX/cmex/m/n/17.28 scriptfont symlargesymbols OMX/cmex/m/n/12 scriptsc
riptfont symlargesymbols OMX/cmex/m/n/10 

textfont@name ->OT1/cmr/bx/n/17.28 

scriptfont@name ->OT1/cmr/bx/n/12 

font@name ->OT1/cmr/bx/n/10 

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symboldletters 
#2<-OML/cmm/b/it 
{xdef}
{csname}
{string}

tf@size ->@xviipt 

@xviipt ->17.28

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OML/cmm/b/it/17.28 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OML/cmm/b/it/17.28 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OML
#2<-cmm
#3<-b
#4<-it
#5<-17.28
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OML

f@family ->cmm
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->b

f@shape ->it
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->b

f@shape ->it
{expandafter}

OML/cmm/b/it -><5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.8
8>cmmib10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>c
mmib10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@n
il <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmmib<10><10.95><12><14.4><1
7.28><20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil 
<
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmmib<10><10.95><12><14.4><17.2
8><20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmmib<10><10.95><12><14.4><17.28><
20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmmib<10><10.95><12><14.4><17.28><20.
74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmmib
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
mib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmmib1
0<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmmib10<-*>@n
il <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-14.4

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-14.4
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-14.4
#2<-
#3<-17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <17.28><20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-17.28

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-17.28
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-17.28
#2<-
#3<-20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmmib10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmmib10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmmib10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->17.28
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmmib10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OML/cmm/b/it/17.28 

external@font ->cmmib10 at17.28pt
{relax}

font@name ->OML/cmm/b/it/17.28 
{select font cmmib10 at 17.28pt}
{relax}
{csname}

f@encoding ->OML

f@family ->cmm

OML+cmm ->skewchar font 127
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->b

f@shape ->it

OML/cmm/b/it -><5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.8
8>cmmib10 

<5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

sf@size ->@xiipt 

@xiipt ->12

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OML/cmm/b/it/12 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OML/cmm/b/it/12 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OML
#2<-cmm
#3<-b
#4<-it
#5<-12
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OML

f@family ->cmm
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->b

f@shape ->it
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->b

f@shape ->it
{expandafter}

OML/cmm/b/it -><5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.8
8>cmmib10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>c
mmib10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@n
il <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmmib<10><10.95><12><14.4><1
7.28><20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil 
<
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmmib<10><10.95><12><14.4><17.2
8><20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmmib<10><10.95><12><14.4><17.28><
20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmmib<10><10.95><12><14.4><17.28><20.
74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmmib
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
mib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmmib1
0<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmmib10<-*>@n
il <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->12
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-14.4

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-17.28

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmmib10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmmib10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmmib10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->12
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmmib10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OML/cmm/b/it/12 

external@font ->cmmib10 at12.0pt
{relax}

font@name ->OML/cmm/b/it/12 
{select font cmmib10 at 12.0pt}
{relax}
{csname}

f@encoding ->OML

f@family ->cmm

OML+cmm ->skewchar font 127
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->b

f@shape ->it

OML/cmm/b/it -><5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.8
8>cmmib10 

<5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

ssf@size ->@xpt 

@xpt ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OML/cmm/b/it/10 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OML/cmm/b/it/10 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OML
#2<-cmm
#3<-b
#4<-it
#5<-10
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OML

f@family ->cmm
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->b

f@shape ->it
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->b

f@shape ->it
{expandafter}

OML/cmm/b/it -><5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.8
8>cmmib10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>c
mmib10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@n
il <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmmib<10><10.95><12><14.4><1
7.28><20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil 
<
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmmib<10><10.95><12><14.4><17.2
8><20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmmib<10><10.95><12><14.4><17.28><
20.74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmmib<10><10.95><12><14.4><17.28><20.
74><24.88>cmmib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmmib
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
mib10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmmib10<-*>@nil <
{def}
{ifdim}

f@size ->10
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-10.95

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-12

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-14.4

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-17.28

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmmib10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmmib10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmmib10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->10
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmmib10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OML/cmm/b/it/10 

external@font ->cmmib10 at10.0pt
{relax}

font@name ->OML/cmm/b/it/10 
{select font cmmib10}
{relax}
{csname}

f@encoding ->OML

f@family ->cmm

OML+cmm ->skewchar font 127
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->b

f@shape ->it

OML/cmm/b/it -><5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.8
8>cmmib10 

<5><6><7><8><9>gen*cmmib<10><10.95><12><14.4><17.28><20.74><24.88>cmmib10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{edef}

math@fonts ->textfont symoperators OT1/cmr/m/n/17.28 scriptfont symoperators OT
1/cmr/m/n/12 scriptscriptfont symoperators OT1/cmr/m/n/10 textfont symletters O
ML/cmm/m/it/17.28 scriptfont symletters OML/cmm/m/it/12 scriptscriptfont symlet
ters OML/cmm/m/it/10 textfont symsymbols OMS/cmsy/m/n/17.28 scriptfont symsymbo
ls OMS/cmsy/m/n/12 scriptscriptfont symsymbols OMS/cmsy/m/n/10 textfont symlarg
esymbols OMX/cmex/m/n/17.28 scriptfont symlargesymbols OMX/cmex/m/n/12 scriptsc
riptfont symlargesymbols OMX/cmex/m/n/10 textfont symboldoperators OT1/cmr/bx/n
/17.28 scriptfont symboldoperators OT1/cmr/bx/n/12 scriptscriptfont symboldoper
ators OT1/cmr/bx/n/10 

textfont@name ->OML/cmm/b/it/17.28 

scriptfont@name ->OML/cmm/b/it/12 

font@name ->OML/cmm/b/it/10 

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symboldsymbols 
#2<-OMS/cmsy/b/n 
{xdef}
{csname}
{string}

tf@size ->@xviipt 

@xviipt ->17.28

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OMS/cmsy/b/n/17.28 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OMS/cmsy/b/n/17.28 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMS
#2<-cmsy
#3<-b
#4<-n
#5<-17.28
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OMS

f@family ->cmsy
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->b

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->b

f@shape ->n
{expandafter}

OMS/cmsy/b/n -><5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.8
8>cmbsy10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>c
mbsy10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@n
il <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmbsy<10><10.95><12><14.4><1
7.28><20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil 
<
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmbsy<10><10.95><12><14.4><17.2
8><20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmbsy<10><10.95><12><14.4><17.28><
20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmbsy<10><10.95><12><14.4><17.28><20.
74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmbsy
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
bsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmbsy1
0<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmbsy10<-*>@n
il <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-14.4

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-14.4
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-14.4
#2<-
#3<-17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{false}

reserved@f ->extract@rangefontinfo <17.28><20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-17.28

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-17.28
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-17.28
#2<-
#3<-20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->17.28
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmbsy10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmbsy10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmbsy10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->17.28
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmbsy10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OMS/cmsy/b/n/17.28 

external@font ->cmbsy10 at17.28pt
{relax}

font@name ->OMS/cmsy/b/n/17.28 
{select font cmbsy10 at 17.28pt}
{relax}
{csname}

f@encoding ->OMS

f@family ->cmsy

OMS+cmsy ->skewchar font 48
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->b

f@shape ->n

OMS/cmsy/b/n -><5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.8
8>cmbsy10 

<5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

sf@size ->@xiipt 

@xiipt ->12

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OMS/cmsy/b/n/12 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OMS/cmsy/b/n/12 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMS
#2<-cmsy
#3<-b
#4<-n
#5<-12
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OMS

f@family ->cmsy
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->b

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->b

f@shape ->n
{expandafter}

OMS/cmsy/b/n -><5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.8
8>cmbsy10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>c
mbsy10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@n
il <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmbsy<10><10.95><12><14.4><1
7.28><20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil 
<
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmbsy<10><10.95><12><14.4><17.2
8><20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmbsy<10><10.95><12><14.4><17.28><
20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <9>gen*cmbsy<10><10.95><12><14.4><17.28><20.
74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmbsy
#3<-10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10><10.95><12><14.4><17.28><20.74><24.88>cm
bsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <10.95><12><14.4><17.28><20.74><24.88>cmbsy1
0<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10.95

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10.95
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10.95
#2<-
#3<-12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{false}

reserved@f ->extract@rangefontinfo <12><14.4><17.28><20.74><24.88>cmbsy10<-*>@n
il <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-12

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-12
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-12
#2<-
#3<-14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->12
{true}

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-14.4

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-17.28

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-20.74

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-
{if}
{true}
{expandafter}
{else}

remove@angles #1>->set@simple@size@args 
#1<-24.88

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmbsy10
{if}
{false}

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmbsy10
#2<-
{if}
{true}

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []
{let}
{def}
{def}
{futurelet}

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 
{ifx}
{false}
{ifx}
{false}
{let}
{fi}
{fi}

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmbsy10
{def}
{def}
{let}
{else}
{expandafter}
{fi}

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 
{csname}

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 
{dimen15}

f@size ->12
{ifx}
{true}
{else}
{edef}

mandatory@arg ->cmbsy10

space -> 
{ifx}
{false}
{let}
{fi}
{fi}

reserved@f ->
{ifx}
{false}
{global}
{expandafter}

font@name ->OMS/cmsy/b/n/12 

external@font ->cmbsy10 at12.0pt
{relax}

font@name ->OMS/cmsy/b/n/12 
{select font cmbsy10 at 12.0pt}
{relax}
{csname}

f@encoding ->OMS

f@family ->cmsy

OMS+cmsy ->skewchar font 48
{skewchar}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->b

f@shape ->n

OMS/cmsy/b/n -><5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.8
8>cmbsy10 

<5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10 ->
{relax}
{fi}
{endgroup}
{restoring current font=OT1/cmr/m/sc/17.28}
{restoring dimen15=17.28pt}
{restoring sizefn@info=undefined}
{restoring optional@arg=undefined}
{restoring mandatory@arg=undefined}
{restoring reserved@c=macro:->}
{restoring @let@token=long macro:->@setfontsize LARGE @xviipt {22ETC.}
{restoring reserved@b=the character .}
{restoring reserved@a=macro:->@nil }
{restoring reserved@f=undefined}
{restoring font@info=undefined}
{restoring external@font=undefined}
{restoring f@size=macro:->17.28}
{restoring f@shape=macro:->sc}
{restoring f@series=macro:->m}
{restoring f@family=macro:->cmr}
{restoring f@encoding=macro:->OT1}
{restoring typeout=macro:#1->begingroup set@display@protect ETC.}
{fi}
{let}
{xdef}
{csname}
{string}

ssf@size ->@xpt 

@xpt ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 
{expandafter}

font@name ->OMS/cmsy/b/n/10 
{ifx}
{true}

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 
{begingroup}
{let}
{escapechar}
{expandafter}
{expandafter}
{expandafter}

font@name ->OMS/cmsy/b/n/10 
{expandafter}
{string}

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMS
#2<-cmsy
#3<-b
#4<-n
#5<-10
{def}
{def}
{def}
{def}
{def}

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Try loading font information for f@encoding +f@family }global exp
andafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let nfs
s@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@enco
ding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 
{expandafter}
{csname}

f@encoding ->OMS

f@family ->cmsy
{ifx}
{false}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->b

f@shape ->n
{ifx}
{false}

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 
{let}
{edef}
{expandafter}
{expandafter}
{csname}

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->b

f@shape ->n
{expandafter}

OMS/cmsy/b/n -><5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.8
8>cmbsy10 
{string}

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 
{expandafter}

font@info -><5><6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>c
mbsy10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@n
il <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmbsy<10><10.95><12><14.4><1
7.28><20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil 
<
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmbsy<10><10.95><12><14.4><17.2
8><20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmbsy<10><10.95><12><14.4><17.28><20.74><24.88>cmbsy10<-*>@nil <
{def}
{ifdim}

f@size ->10
{false}

reserved@f ->extract@rangefontinfo <8><9>gen*cmbsy<10><10.95><12><14.4><17.28><
20.74><24.88>cmbsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->
{if}
{true}
{expandafter}
{else}

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef